/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app_1;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.URL;
import java.nio.charset.Charset;
import java.util.Arrays;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */


public class NewJFrame2 extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame2
     */
    DefaultTableModel model;
    public NewJFrame2() {
        initComponents();
        this.setExtendedState(NewJFrame.MAXIMIZED_BOTH);
        model=(DefaultTableModel) tbl_exam.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_exam = new javax.swing.JTable();
        month = new javax.swing.JTextField();
        day = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 51, 255));
        jButton2.setText("Show Finals");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tbl_exam.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        tbl_exam.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null},
                {"Tuesday", null, null, null, null},
                {"Thursday", null, null, null, null},
                {"Sunday", null, null, null, null}
            },
            new String [] {
                "day", "date", "room 1", "room 2", "room 3"
            }
        ));
        tbl_exam.setRowHeight(22);
        jScrollPane3.setViewportView(tbl_exam);

        month.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        month.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        month.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthActionPerformed(evt);
            }
        });

        day.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        day.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        day.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Start Month");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("First Sunday");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Month");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Day");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Month");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Day");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Month");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel8.setText("Day");

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField5.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField6.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setText("Exceptions if any");

        jTextField7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel10.setText("Year");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Database");

        jTextField8.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jTextField8.setText("C:\\Table\\table.xls");

        jButton1.setFont(new java.awt.Font("Tahoma", 2, 20)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 2, 20)); // NOI18N
        jButton3.setText("Reload");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(132, 132, 132))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(108, 108, 108)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addGap(53, 53, 53))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(75, 75, 75)))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(126, 126, 126)
                                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(75, 75, 75)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(4, 4, 4)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel7)
                                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel5)
                                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(27, 27, 27)
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(71, 71, 71)
                                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(65, 65, 65)
                                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(day, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(209, 209, 209))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String file_path = jTextField8.getText(); // get database location from user
        File f = new File(file_path);
        Workbook wb = null; // initiate excel sheet and catch exceptions
        try {
            wb = Workbook.getWorkbook(f);
        } catch (IOException ex) {
            Logger.getLogger(NewJFrame2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            Logger.getLogger(NewJFrame2.class.getName()).log(Level.SEVERE, null, ex);
        }
        Sheet a = wb.getSheet(0);
        int row = a.getRows(); // get maximum number of rows
        int col = a.getColumns(); // get maximum number of columns
        String [][] table = new String [row][93];
        for (int io=0;io<row;io++)
        {
            for (int il=0;il<93;il++)
            {
                table[io][il]="";
            }
        }
        for (int i=0;i<row;i++) // put the database in table 2D array
        {
            for (int j=0;j<col;j++)
            {
                Cell c = a.getCell(j,i);
                table[i][j]=c.getContents();
            }
        }
        String [][] temp_res_exam = new String [2][72];
        for (int io=0;io<2;io++)
        {
            for (int il=0;il<72;il++)
            {
                temp_res_exam[io][il]="";
            }
        }
        String [][] res_1_exam = new String [366][72];
        for (int io=0;io<366;io++)
        {
            for (int il=0;il<72;il++)
            {
                res_1_exam[io][il]="";
            }
        }
        String [][] res_2_exam = new String [366][72];
        for (int io=0;io<366;io++)
        {
            for (int il=0;il<72;il++)
            {
                res_2_exam[io][il]="";
            }
        }
        String [][] res_3_exam = new String [366][72];
        for (int io=0;io<366;io++)
        {
            for (int il=0;il<72;il++)
            {
                res_3_exam[io][il]="";
            }
        }
        String [][] tbl_2 = new String [366][5];
        for (int io=0;io<366;io++)
        {
            for (int il=0;il<5;il++)
            {
                res_3_exam[io][il]="";
            }
        }
        int q=0;
        int mo=1;
        if (month.getText().equals("")){month.setText("1");} // read user input for start month
        mo = Integer.parseInt(month.getText()); // if no input, then assume it to be 1
        int month_original=mo;
        int da=1;
        if (day.getText().equals("")){day.setText("1");} // read user input for start day
        da = Integer.parseInt(day.getText()); // if no input, then assume it to be 1        
        if (mo==1){mo=0;} // return number of day in the year from month and days entered
        if (mo==2){mo=31;}
        if (mo==3){mo=59;}
        if (mo==4){mo=90;}
        if (mo==5){mo=120;}
        if (mo==6){mo=151;}
        if (mo==7){mo=181;}
        if (mo==8){mo=212;}
        if (mo==9){mo=243;}
        if (mo==10){mo=273;}
        if (mo==11){mo=304;}
        if (mo==12){mo=334;}
        int day = (mo+da); // calculate day (1-365)
        int day_5=day-1; // make exams only on Sunday,Tuesday or Thursday
        for (int o=1; o<12; o++) // the rest of days can't have exams
        {
            day_5=day_5+2; if (day_5 >365) {day_5 = ((day_5%366)+1); }
            res_1_exam [day_5%366][0]="xxx";
            res_2_exam [day_5%366][0]="xxx";
            res_3_exam [day_5%366][0]="xxx";

            day_5=day_5+2; if (day_5 >365) {day_5 = ((day_5%366)+1); }
            res_1_exam [day_5%366][0]="xxx";
            res_2_exam [day_5%366][0]="xxx";
            res_3_exam [day_5%366][0]="xxx";

            day_5=day_5+2; if (day_5 >365) {day_5 = ((day_5%366)+1); }
            res_1_exam [day_5%366][0]="xxx";
            res_2_exam [day_5%366][0]="xxx";
            res_3_exam [day_5%366][0]="xxx";

            day_5=day_5+1; if (day_5 >365) {day_5 = ((day_5%366)+1); }
            res_1_exam [day_5%366][0]="xxx";
            res_2_exam [day_5%366][0]="xxx";
            res_3_exam [day_5%366][0]="xxx";
        }
        
        int ex1flag = 0; // flag for first exception
        int day_ex1 =0;
        if ((jTextField1.getText().compareTo("")!=0)) // check if user inputs exception
        {
            ex1flag = 1;
        int mo_ex1 = Integer.parseInt(jTextField1.getText()); // calculate exception day and month
        int da_ex1 = Integer.parseInt(jTextField2.getText());
        if (mo_ex1==1){mo_ex1=0;}
        if (mo_ex1==2){mo_ex1=31;}
        if (mo_ex1==3){mo_ex1=59;}
        if (mo_ex1==4){mo_ex1=90;}
        if (mo_ex1==5){mo_ex1=120;}
        if (mo_ex1==6){mo_ex1=151;}
        if (mo_ex1==7){mo_ex1=181;}
        if (mo_ex1==8){mo_ex1=212;}
        if (mo_ex1==9){mo_ex1=243;}
        if (mo_ex1==10){mo_ex1=273;}
        if (mo_ex1==11){mo_ex1=304;}
        if (mo_ex1==12){mo_ex1=334;}
        day_ex1 = mo_ex1+da_ex1; // calculate exception day (1-365)
        res_1_exam [day_ex1%366][0]="xxx"; // eliminate the exception day in all 3 rooms
        res_2_exam [day_ex1%366][0]="xxx";
        res_3_exam [day_ex1%366][0]="xxx";
        }
        
        int ex2flag = 0; // flag for second exception
        int day_ex2 =0;
        if ((jTextField3.getText().compareTo("")!=0)) // check if user inputs exception
        {
            ex2flag = 1;
        int mo_ex2 = Integer.parseInt(jTextField3.getText()); // calculate exception day and month
        int da_ex2 = Integer.parseInt(jTextField4.getText());
        if (mo_ex2==1){mo_ex2=0;}
        if (mo_ex2==2){mo_ex2=31;}
        if (mo_ex2==3){mo_ex2=59;}
        if (mo_ex2==4){mo_ex2=90;}
        if (mo_ex2==5){mo_ex2=120;}
        if (mo_ex2==6){mo_ex2=151;}
        if (mo_ex2==7){mo_ex2=181;}
        if (mo_ex2==8){mo_ex2=212;}
        if (mo_ex2==9){mo_ex2=243;}
        if (mo_ex2==10){mo_ex2=273;}
        if (mo_ex2==11){mo_ex2=304;}
        if (mo_ex2==12){mo_ex2=334;}
        day_ex2 = mo_ex2+da_ex2; // calculate exception day (1-365)
        res_1_exam [day_ex2%366][0]="xxx"; // eliminate the exception day in all 3 rooms
        res_2_exam [day_ex2%366][0]="xxx";
        res_3_exam [day_ex2%366][0]="xxx";
        }
        
        int ex3flag = 0; // flag for third exception
        int day_ex3 =0;
        if ((jTextField5.getText().compareTo("")!=0)) // check if user inputs exception
        {
            ex3flag = 1;
        int mo_ex3 = Integer.parseInt(jTextField5.getText()); // calculate exception day and month
        int da_ex3 = Integer.parseInt(jTextField6.getText());
        if (mo_ex3==1){mo_ex3=0;}
        if (mo_ex3==2){mo_ex3=31;}
        if (mo_ex3==3){mo_ex3=59;}
        if (mo_ex3==4){mo_ex3=90;}
        if (mo_ex3==5){mo_ex3=120;}
        if (mo_ex3==6){mo_ex3=151;}
        if (mo_ex3==7){mo_ex3=181;}
        if (mo_ex3==8){mo_ex3=212;}
        if (mo_ex3==9){mo_ex3=243;}
        if (mo_ex3==10){mo_ex3=273;}
        if (mo_ex3==11){mo_ex3=304;}
        if (mo_ex3==12){mo_ex3=334;}
        day_ex3 = mo_ex3+da_ex3; // calculate exception day (1-365)
        res_1_exam [day_ex3%366][0]="xxx"; // eliminate the exception day in all 3 rooms
        res_2_exam [day_ex3%366][0]="xxx";
        res_3_exam [day_ex3%366][0]="xxx";
        }
 
        int x=0;
        for (int i=1; i<row; i++) // count until last subject in database
        { // copy table contents for subject i into temp_res_exam array
            int k1=(day%366); if (k1==0) { k1=1;}int k2=k1; temp_res_exam[1][0]=table[i][0]; temp_res_exam[1][1]=table[i][1];
            for ( int z=23; z<93; z++) { temp_res_exam[1][z-21]=table[i][z];}

            outerloop:
            for ( int j=1; j<366; j++ )
            {
                int flag = 1; int flagerr=1; int k=k2;
                k=(k%366); if (k==0) { k=1;}
                if (res_1_exam[k][0].equals("")) // check if room 1 is empty
                {
                    loop1:
                    for (int m=0; m<72; m++)
                    {

                        for (int n=0; n<72; n++)
                        { // check if no conflicts occurs
                            if ( res_1_exam[k][m].equals(temp_res_exam[1][n]) & (res_1_exam[k][m].compareTo("")!=0))
                            {flag=0; break loop1;}
                        }

                    } if (flag==1) // that means no conflicts happened
                    { for ( int s=0; s<72 ;s++ )
                        { res_1_exam[k][s]=temp_res_exam[1][s]; }
                        break outerloop;
                    }
                }
                else {x=x+1;}
                k=(k%366); if (k==0) { k=1;}
                if (res_2_exam[k][0].equals("")) // check if room 2 is empty
                {
                    loop2:
                    for (int m=0; m<72; m++)
                    {
                        for (int n=0; n<72; n++)
                        { // check if no conflicts occurs
                            if ( res_1_exam[k][m].equals(temp_res_exam[1][n]) & (res_1_exam[k][m].compareTo("")!=0) )
                            {flag=0; break loop2;}
                            if ( res_2_exam[k][m].equals(temp_res_exam[1][n]) & (res_2_exam[k][m].compareTo("")!=0) )
                            {flag=0; break loop2;}
                        }
                    } if (flag==1) // that means no conflicts happened
                    { for ( int s=0; s<72 ;s++ )
                        { res_2_exam[k][s]=temp_res_exam[1][s]; }
                        break outerloop;
                    }
                }
                else {x=x+1;}
                k=(k%366); if (k==0) { k=1;}
                if (res_3_exam[k][0].equals("")) // check if room 3 is empty
                {
                    loop3:
                    for (int m=0; m<72; m++)
                    {
                        for (int n=0; n<72; n++)
                        { // check if no conflicts occurs
                            if ( res_1_exam[k][m].equals(temp_res_exam[1][n]) & (res_1_exam[k][m].compareTo("")!=0) )
                            {flag=0; k2=((k2+1)%366); if (k2==0){k2=1;} flagerr=0; break loop3;}
                            if ( res_2_exam[k][m].equals(temp_res_exam[1][n]) & (res_2_exam[k][m].compareTo("")!=0) )
                            {flag=0; k2=((k2+1)%366); if (k2==0){k2=1;}; flagerr=0; break loop3;}
                            if ( res_3_exam[k][m].equals(temp_res_exam[1][n]) & (res_3_exam[k][m].compareTo("")!=0) )
                            {flag=0; k2=((k2+1)%366); if (k2==0){k2=1;} flagerr=0; break loop3;}
                        }
                    } if (flag==1) // that means no conflicts happened
                    { for ( int s=0; s<72 ;s++ )
                        { res_3_exam[k][s]=temp_res_exam[1][s]; }
                        break outerloop;
                    }
                }
                else {x=x+1;}
                if ((x==3) & (flagerr==1)){k2=((k2+1)%366); if (k2==0){k2=1;}}
                k=(k%366); if (k==0) { k=1;} // if all 3 rooms are used in that time
                x=0; //  then increment k which means try next day
            } //  outerloop            
            for (int y=0; y<2; y++)
            {
                for (int u=0; u<72; u++)
                {
                    temp_res_exam[y][u]="";
                }
            }
        } // main i
        
        for (int d=1; d<366; d++) // copy all 3 rooms in the exams table to be shown
        {
            tbl_2[d][2] = res_1_exam[d][0];
            tbl_2[d][3] = res_2_exam[d][0];
            tbl_2[d][4] = res_3_exam[d][0];
        }
        int original_year = 2020;
        if ((jTextField7.getText().compareTo("")!=0)) // check if the user wants to enter a year
        {
            original_year = Integer.parseInt(jTextField7.getText());
        }
        int year = original_year;
        int mm=mo; int dd=0;
        for (int c=0; c<100; c++)
        {
            day = (day%366);
            if (day ==0) { day =1;}
            int flag_2=0;
            if ((ex1flag == 1) & (day==day_ex1)){q=q+1;} // if exception 1 found skip a line in the table
            if ((ex2flag == 1) & (day==day_ex2)){q=q+1;} // if exception 2 found skip a line in the table
            if ((ex3flag == 1) & (day==day_ex3)){q=q+1;} // if exception 3 found skip a line in the table
            day = (day%366);
            if (day ==0) { day =1;}
            if (!"xxx".equals(tbl_2[day][2])) // check if room 1 has exams for that day
            {
            
            tbl_exam.getModel().setValueAt(tbl_2[day][2], q ,2); flag_2=1;
            while (true) 
            {   
                if (day>334){mm=12;dd=day%334; break;}
                if (day>304){mm=11;dd=day%304; break;}
                if (day>273){mm=10;dd=day%273; break;}
                if (day>243){mm=9;dd=day%243; break;}
                if (day>212){mm=8;dd=day%212; break;}
                if (day>181){mm=7;dd=day%181; break;}
                if (day>151){mm=6;dd=day%151; break;}
                if (day>120){mm=5;dd=day%120; break;}
                if (day>90){mm=4;dd=day%90; break;}
                if (day>59){mm=3;dd=day%59; break;}
                if (day>31){mm=2;dd=day%31; break;}
                if (day>0){mm=1;dd=day; break;}
            }
            if ((mm<month_original)) { year =original_year+1;} // if exams continue in different years
            String date_final = (dd + "/"+ mm + "/" + year);
            tbl_exam.getModel().setValueAt(date_final, q ,1);
            day = (day%366); if (day >365) { day =day+1;}
            }
            if (!"xxx".equals(tbl_2[day][3])) // check if room 2 has exams for that day
            {
            day = (day%366);
            if (day ==0) { day =1; }
            tbl_exam.getModel().setValueAt(tbl_2[day][3], q ,3);
            }
            if (!"xxx".equals(tbl_2[day][4])) // check if room 3 has exams for that day
            {
            day = (day%366);
            if (day ==0) { day =1; }
            tbl_exam.getModel().setValueAt(tbl_2[day][4], q ,4);
            }
            if (flag_2==1) {q=q+1;}
            if (q==25) {break;}
            day=((day+1)%366);if (day ==0) { day =1;}
        }        
        for (int uu=0; uu<28; uu++)
        {
            if (   ("".equals(tbl_exam.getModel().getValueAt(uu,2))) | (tbl_exam.getModel().getValueAt(uu,2)==null)  )
                    {
                        tbl_exam.getModel().setValueAt("", uu ,0);
                        tbl_exam.getModel().setValueAt("", uu ,1);
                    }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void monthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monthActionPerformed

    private void dayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dayActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new NewJFrame1().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        new NewJFrame2().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField day;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField month;
    private javax.swing.JTable tbl_exam;
    // End of variables declaration//GEN-END:variables
}
